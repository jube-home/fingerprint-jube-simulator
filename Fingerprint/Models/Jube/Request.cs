namespace Fingerprint.Models.Jube;

public class Request
{
    //Example take from Jube documentation: https://jube-home.github.io/aml-fraud-transaction-monitoring/Configuration/Models/Models/
    public string? AccountId { get; set; } = "Test2";
    public string? TxnId { get; set; } = "0987654321";
    public string? TxnDateTime { get; set; } = "2018-08-19T21:41:37.247";
    public string? Currency { get; set; } = "826";
    public string? ResponseCode { get; set; } = "0";
    public double? CurrencyAmount { get; set; } = 123.45;
    public double? SettlementAmount { get; set; } = 100000;
    public string? AccountCurrency { get; set; } = "566";
    public string? IP { get; set; } = "123.456.789.200";
    public string? DeviceId { get; set; } = "OlaRoseGoldPhone6";
    public string? ChannelId { get; set; } = "1";
    public string? AppVersionCode { get; set; } = "12.34";
    public string? ServiceCode { get; set; } = "DID";
    public string? System { get; set; } = "Android";
    public string? Brand { get; set; } = "ZTE";
    public string? Model { get; set; } = "Barby";
    public double? AccountLongitude { get; set; } = 36.1408;
    public double? AccountLatitude { get; set; } = 5.3536;
    public string? OS { get; set; } = "Lollypop";
    public string? Resolution { get; set; } = "720*1280";
    public bool? DebuggerAttached { get; set; } = true;
    public bool? SimulatorAttached { get; set; } = true;
    public bool? Jailbreak { get; set; } = false;
    public string? MAC { get; set; } = "94:23:44f:2:d3";
    public string? ToAccountId { get; set; } = "MTN";
    public string? ToAccountExternalRef { get; set; } = "ChurchmanR";
    public string? TwoFATypeId { get; set; } = "SMS";
    public string? TwoFAResponseId { get; set; } = "1";
    public string? TransactionExternalResponseId { get; set; } = "0";
    public bool? Storage { get; set; } = true;
    public string? FingerprintHash { get; set; } = "jhjkhjkhsjh2hjhjkhj2k";
    public string? IndustryName { get; set; } = "GAMING";
    public string? BusinessModel { get; set; } = "Sports betting";
    public double? AmountEUR { get; set; } = 100.00;
    public double? AmountEURRate { get; set; } = 1.0;
    public double? AmountUSD { get; set; } = 113.05;
    public double? AmountUSDRate { get; set; } = 1.13;
    public double? AmountGBP { get; set; } = 86.5866;
    public double? AmountGBPRate { get; set; } = 0.86;
    public string? Is3D { get; set; } = "False";
    public double? OriginalAmount { get; set; } = 100.00;
    public string? OriginalCurrency { get; set; } = "EUR";
    public string? Email { get; set; } = "please@hash.me";
    public string? CreditCardHash { get; set; } = "0xDA39A3EE5E6B4B0JJJ1890AFD80709";
    public string? AcquirerBankName { get; set; } = "Caixa";
    public string? ActionDate { get; set; } = "2019-04-17 01:18:15Z";
    public string? APMAccountId { get; set; } = "";
    public string? BankId { get; set; } = "57";
    public string? BillingAddress { get; set; } = "Address Line 1";
    public string? BillingCity { get; set; } = "Address Line 2";
    public string? BillingCountry { get; set; } = "DE";
    public string? BillingFirstName { get; set; } = "Robert";
    public string? BillingLastName { get; set; } = "Mugabe";
    public string? BillingPhone { get; set; } = "1234567890";
    public string? BillingState { get; set; } = "";
    public string? BillingZip { get; set; } = "123456";
    public bool? IsAPM { get; set; } = false;
    public bool? IsCascaded { get; set; } = false;
    public bool? IsCredited { get; set; } = false;
    public bool? IsCurrencyConverted { get; set; } = false;
    public bool? IsModification { get; set; } = false;
    public bool? IsModified { get; set; } = false;
    public bool? IsRebill { get; set; } = false;
    public string? OrderId { get; set; } = "10607324128";
    public string? TransactionTypeId { get; set; } = "1000";
    public string? TransactionResultId { get; set; } = "1006";

    //Example taken from Fingerprint documentation: https://dev.fingerprint.com/reference/server-api-get-event#/
    public string? FingerprintIpInfoAddress { get; set; } = "94.142.239.124";
    public double? FingerprintIpInfoIpLatitude { get; set; } = 49.982;
    public double? FingerprintIpInfoLongitude { get; set; } = 36.2566;
    public string? FingerprintIpInfoPostalCode { get; set; } = "61202";
    public string? FingerprintIpInfoTimezone { get; set; } = "Europe/Dusseldorf";
    public string? FingerprintIpInfoCity { get; set; } = "Dusseldorf";
    public string? FingerprintIpInfoCountryCode { get; set; } = "DE";
    public string? FingerprintIpInfoCountryName { get; set; } = "Germany";
    public string? FingerprintIpInfoContinentCode { get; set; } = "EU";
    public string? FingerprintIpInfoContinentName { get; set; } = "Europe";
    public string? FingerprintIdentificationVisitorId{ get; set; } = "Ibk1527CUFmcnjLwIs4A9";
    public string? FingerprintIdentificationRequestId { get; set; } = "1708102555327.NLOjmg";
    public string? FingerprintIdentificationBrowserDetailsBrowserName { get; set; } = "Chrome";
    public string? FingerprintIdentificationBrowserMajorVersion { get; set; } = "74";
    public string? FingerprintIdentificationBrowserFullVersion { get; set; } = "74.0.3729";
    public string? FingerprintIdentificationBrowserOs { get; set; } = "Windows";
    public string? FingerprintIdentificationBrowserOsVersion { get; set; } = "7";
    public string? FingerprintIdentificationBrowserDevice { get; set; } = "Mozilla/5.0 (Windows NT 6.1; Win64; x64) ....";
    public double? FingerprintIdentificationConfidenceScore { get; set; } = 0.97;
    public bool? FingerprintIdentificationVisitorFound { get; set; } = false;
    public bool? FingerprintIdentificationReplayed { get; set; } = false;
    public string? FingerprintIdentificationFirstSeenAtGlobal { get; set; } = "2022-03-16T11:26:45.362Z";
    public string? FingerprintIdentificationFirstSeenAtSubscription { get; set; } = "2022-03-16T11:31:01.101Z";
    public string? FingerprintIdentificationLastSeenAtGlobal { get; set; } = "2022-03-16T11:26:45.362Z";
    public string? FingerprintIdentificationLastSeenAtSubscription { get; set; } = "2022-03-16T11:31:01.101Z";
    public int? FingerprintBot { get; set; } = 0;
    public string? FingerprintBotUrl { get; set; } = "https://www.example.com/login?hope{this{works}[!}";
    public string? FingerprintBotIp { get; set; } = "61.127.217.15";
    public string? FingerprintBotTime { get; set; } = "2019-05-21T16:40:13Z";

    public string? FingerprintBotUserAgent { get; set; } =
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 YaBrowser/24.1.0.0 Safari/537.36";

    public string? FingerprintBotRequestId { get; set; } = "1708102555327.NLOjmg";
    public bool? FingerprintRootApps { get; set; } = false;
    public bool? FingerprintEmulator { get; set; } = false;
    public bool? FingerprintIpBlocklist { get; set; } = false;
    public bool? FingerprintIpBlocklistDetailsEmailSpam { get; set; } = false;
    public bool? FingerprintIpBlocklistDetailsAttackSource { get; set; } = false;
    public bool? FingerprintTor { get; set; } = false;
    public bool? FingerprintVpn { get; set; } = false;
    public int? FingerprintVpnConfidence { get; set; } = 0;
    public string? FingerprintVpnOriginTimezone { get; set; } = "Europe/Berlin";
    public string? FingerprintVpnOriginCountry { get; set; } = "unknown";
    public bool? FingerprintVpnOriginMethodsTimezoneMismatch { get; set; } = false;
    public bool? FingerprintVpnOriginMethodsPublicVpn { get; set; } = false;
    public bool? FingerprintVpnOriginMethodsAuxiliaryMobile { get; set; } = false;
    public bool? FingerprintVpnOriginMethodsOsMismatch { get; set; } = false;
    public bool? FingerprintVpnOriginMethodsRelay { get; set; } = false;
    public bool? FingerprintProxy { get; set; } = false;
    public int? FingerprintProxyConfidence { get; set; } = 0;
    public bool? FingerprintIncognito { get; set; } = false;
    public bool? FingerprintTampering { get; set; } = false;
    public double? FingerprintTamperingAnomalyScore { get; set; } = 0.1955;
    public bool? FingerprintTamperingAntiDetectBrowser { get; set; } = false;
    public bool? FingerprintClonedApp { get; set; } = false;
    public string? FingerprintFactoryResetTime = "1970-01-01T00:00:00Z";
    public bool? FingerprintJailbroken = false;
    public bool? FingerprintFrida = false;
    public bool? FingerprintPrivacySettings = false;
    public bool? FingerprintVirtualMachine = false;
    public bool? FingerprintHighActivity = false;
    public bool? FingerprintDeveloperTools = false;
    public bool? FingerprintMitmAttack = false;
}